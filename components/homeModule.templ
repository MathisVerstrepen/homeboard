package components

import (
	. "diikstra.fr/homeboard/models"
	"fmt"
)

templ ModuleCardHeader(metadata ModuleMetada, data ModuleData) {
	<div class="flex mb-4 justify-between items-center" id={ fmt.Sprintf("infobar_%s", data.Position) }>
		<div class="flex space-x-3">
			<img
				src={ "/assets/images/modules/" + metadata.Icon + "/icon.webp" }
				alt={ "icon_" + metadata.Icon }
				class="h-8 w-8"
				loading="lazy"
			/>
			<h2 class="font-bold text-lg text-white">{ metadata.Name }</h2>
		</div>
		<div class="h-8 w-8 overflow-hidden" id={ fmt.Sprintf("actions_%s", data.Position) }>
			<svg
				role="button"
				class="w-8 h-8 bg-white duration-200 rounded-lg bg-opacity-0 hover:bg-opacity-10 p-1"
				hx-get={ fmt.Sprintf("/home/module/edit/%s/%s", metadata.Name, data.Position) }
				hx-target={ fmt.Sprintf("#infobar_%s", data.Position) }
				hx-swap="afterend"
			>
				<use href="#ellipsis-vertical"></use>
			</svg>
		</div>
	</div>
}

templ ModuleEdit(moduleName string, position string) {
	<div id={ fmt.Sprintf("content_edit_%s", position) } class="h-full w-full grid grid-cols-4 p-2 justify-items-center card_content">
		<div
			role="button"
			class="flex flex-col items-center justify-center text-c-red bg-c-red bg-opacity-10 
            rounded-2xl border border-c-red border-opacity-15 hover:bg-opacity-15 duration-200
            h-full w-[90%] px-4"
			hx-delete={ fmt.Sprintf("/home/module/%s/%s", moduleName, position) }
			hx-target={ fmt.Sprintf("#%s", position) }
		>
			<svg class="w-5 h-5 mb-2"><use href="#trash"></use></svg>
			<p class="text-center">Delete</p>
		</div>
		// TODO Add force refresh
		<div
			role="button"
			class="flex flex-col items-center justify-center text-c-cyan bg-c-cyan bg-opacity-10 
            rounded-2xl border border-c-cyan border-opacity-15 hover:bg-opacity-15 duration-200
            h-full w-[90%] px-4"
            hx-get={ fmt.Sprintf("/home/module/refresh/%s/%s", moduleName, position) }
		>
			<svg class="w-5 h-5 mb-2"><use href="#refresh"></use></svg>
			<p class="text-center">Force Refresh</p>
		</div>
		<div
			role="button"
			class="flex flex-col items-center justify-center text-white bg-white bg-opacity-10 
            rounded-2xl border border-white border-opacity-15 hover:bg-opacity-15 duration-200
            h-full w-[90%] px-4"
			hx-get={ fmt.Sprintf("/home/module/edit/%s/%s/variables", moduleName, position) }
			hx-target={ fmt.Sprintf("#infobar_%s", position) }
			hx-swap="afterend"
		>
			<svg class="w-5 h-5 mb-2"><use href="#variable"></use></svg>
			<p class="text-center">Module Variables</p>
		</div>
		<div
			role="button"
			class="flex flex-col items-center justify-center text-white bg-white bg-opacity-10 
            rounded-2xl border border-white border-opacity-15 hover:bg-opacity-15 duration-200
            h-full w-[90%] px-4"
		>
			<svg class="w-5 h-5 mb-2"><use href="#paint-brush"></use></svg>
			<p class="text-center">Variants</p>
		</div>
	</div>
	@Button(ButtonMeta{
		Icon:           CloseIcon("white"),
		Target:         fmt.Sprintf("#content_edit_%s", position),
		Id:             fmt.Sprintf("actions_%s", position),
		Swap:           true,
	})
}

templ ModuleEditVariables(md ModuleMetada, data ModuleData) {
	<div
		class="h-full w-full flex flex-col p-2 card_content"
		id={ fmt.Sprintf("content_edit_variable_%s", data.Position) }
	>
		<h2 class="text-xl font-bold text-white mb-4">Module Variables</h2>
		<form
			id={ fmt.Sprintf("form_%s", data.Position) }
			class="grid grid-cols-[25%_75%] items-center"
		>
			for variable_name, variable_value := range data.Variables {
				<p class="text-white mb-1">{ variable_name }</p>
				<input
					name={ variable_name }
					type="text"
					value={ variable_value }
					class="w-2/3 bg-white text-white bg-opacity-5 hover:bg-opacity-10 duration-200
                border border-white border-opacity-20 rounded-xl py-1 px-3 mb-1"
				/>
			}
		</form>
	</div>
	@Button(ButtonMeta{
		Icon:           CloseIcon("white"),
		Target:         fmt.Sprintf("#content_edit_variable_%s", data.Position),
		Id:             fmt.Sprintf("actions_%s", data.Position),
		Swap:           true,
		PostAction:     fmt.Sprintf("/home/module/edit/%s/%s/variables", md.Name, data.Position),
		Include:        fmt.Sprintf("#form_%s input", data.Position),
	})
}
