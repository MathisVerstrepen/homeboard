package components

import (
	"fmt"
	. "diikstra.fr/homeboard/models"
	db "diikstra.fr/homeboard/pkg/db"
)

templ Settings() {
	<div class="w-full p-4 flex flex-col items-center" id="content">
		<div
			role="button"
			class="bg-white bg-opacity-10 rounded-2xl px-10 py-2 text-white font-bold w-fit h-fit"
			hx-get="/settings/backgrounds"
			hx-swap="afterend"
		>
			Change Background
		</div>
	</div>
}

templ BgPopup(bd BackgroundData) {
	<div
		class="absolute bg-black bg-opacity-20 backdrop-blur h-full w-full top-0 left-0 rounded-[32px] px-16 py-10 flex flex-col"
		id="bg-popup"
	>
		<div class="absolute top-8 right-8">
			@Button(ButtonMeta{
				Icon:   CloseIcon("white"),
				Target: "#bg-popup",
				Id:     "settings_popup",
			})
		</div>
		<h2 class="text-3xl font-bold text-white mb-4">Background modification</h2>
		<label
			htmlFor="bg_filepicker"
			class="flex items-center space-x-1 text-white bg-white bg-opacity-10 px-8 py-2 rounded-2xl border border-white border-opacity-15 
    w-fit mb-8 hover:bg-opacity-15 duration-200"
		>
			<input
				class="hidden"
				type="file"
				name="file"
				id="bg_filepicker"
				aria-describedby="selected-file"
				hx-on="change"
				hx-post="/settings/backgrounds"
				hx-encoding="multipart/form-data"
				accept="image/*"
				hx-target="#bg-item-list"
				hx-swap="beforeend"
			/>
			<svg class="w-5 h-5"><use href="#arrow-up-tray"></use></svg>
			<span>Upload New</span>
		</label>
		<div class="flex flex-wrap max-h-full overflow-x-scroll" id="bg-item-list">
			for _, bg := range *bd.Backgrounds {
				@BgItem(bg)
			}
		</div>
	</div>
}

templ BgItem(bg db.Background) {
	<div id={ fmt.Sprintf("item-%d", bg.Id) } class="mr-8">
		<p class="text-white font-bold mb-1">{ bg.Filename }</p>
		<img src={ "/assets/images/background/" + bg.Filename } alt={ "bg-" + bg.Filename } class="h-44 rounded-lg mb-2"/>
		<div class="flex space-x-2">
			<div id={ fmt.Sprintf("button-bg-%d", bg.Id) }>
				if bg.Selected {
					@buttonBgSelected()
				} else {
					@buttonBgSelect(bg.Id)
				}
			</div>
            <div id={ fmt.Sprintf("delete-bg-%d", bg.Id) }>
                if bg.Selected {
                    @disabledDeleteBgItem()
                } else {
                    @deleteBgItem(bg.Id)
                }
            </div>
		</div>
	</div>
}

templ buttonBgSelected() {
	<div
		role="button"
		class="flex items-center justify-center space-x-1 text-c-cyan bg-c-cyan bg-opacity-10 w-28 h-10 rounded-2xl 
        border border-c-cyan border-opacity-15 mb-8 hover:bg-opacity-15 duration-200"
	>
		<svg class="w-5 h-5"><use href="#check"></use></svg>
		<span>Set</span>
	</div>
}

templ buttonBgSelect(Id int) {
	<div
		role="button"
		class="flex items-center justify-center space-x-1 text-white bg-white bg-opacity-10 w-28 h-10 rounded-2xl 
        border border-white border-opacity-15 mb-8 hover:bg-opacity-15 duration-200"
		hx-post={ fmt.Sprintf("/settings/backgrounds/selected/%d", Id) }
		hx-target="#background"
	>
		<svg class="w-6 h-6"><use href="#arrow-path-rounded-square"></use></svg>
		<span>Set</span>
	</div>
}

templ OobButtonBgSelect(Id int) {
	<div id={ fmt.Sprintf("button-bg-%d", Id) } hx-swap-oob="outerHTML">
		@buttonBgSelect(Id)
	</div>
}

templ OobButtonBgSelected(Id int) {
	<div id={ fmt.Sprintf("button-bg-%d", Id) } hx-swap-oob="outerHTML">
		@buttonBgSelected()
	</div>
}

templ deleteBgItem(Id int) {
    <div
        role="button"
        class="flex items-center justify-center text-c-red bg-c-red bg-opacity-10 h-10 w-10 rounded-2xl 
        border border-c-red border-opacity-15 mb-8 hover:bg-opacity-15 duration-200"
        hx-delete={ fmt.Sprintf("/settings/backgrounds/%d", Id) }
        hx-target={ fmt.Sprintf("#item-%d", Id) }
        hx-swap="delete"
    >
        <svg class="w-5 h-5"><use href="#trash"></use></svg>
    </div>
}

templ disabledDeleteBgItem() {
    <div
        role="button"
        class="flex items-center justify-center text-c-red bg-c-red bg-opacity-10 h-10 w-10 rounded-2xl 
        border border-c-red border-opacity-15 mb-8 hover:bg-opacity-15 duration-200 hover:cursor-not-allowed opacity-50"
    >
        <svg class="w-5 h-5"><use href="#trash"></use></svg>
    </div>
}

templ OobDeleteBgItem(Id int) {
    <div id={ fmt.Sprintf("delete-bg-%d", Id) } hx-swap-oob="outerHTML">
        @deleteBgItem(Id)
    </div>
}

templ OobDisabledDeleteBgItem(Id int) {
    <div id={ fmt.Sprintf("delete-bg-%d", Id) } hx-swap-oob="outerHTML">
        @disabledDeleteBgItem()
    </div>
}

templ HeaderButtons() {
	<span></span>
}
